{"version":3,"sources":["context/keys.js","components/Key.js","components/Keyboard.js","App.js","utils/index.js","index.js"],"names":["keysContext","createContext","validKeys","setValidKeys","Provider","Consumer","Key","content","keyName","type","useContext","useState","pressed","setPressed","handleKeyDown","event","key","curr","toLowerCase","handleKeyUp","useEffect","window","addEventListener","removeEventListener","className","includes","onClick","setTimeout","filter","charAt","toUpperCase","slice","Keyboard","visual","this","_visual","_key","_done","_id","uuid","done","id","Space","App","totalMs","setTotalMs","tempMs","setTempMs","focused","setFocused","doneKeys","setDoneKeys","expectedKeys","setExpectedKeys","totalKeys","setTotalKeys","failedKeys","setFailedKeys","generateSequence","max","group","i","push","length","Math","floor","random","GROUP_AMOUNT","keys","value","onKeyPress","preventDefault","Date","now","firstExpectedEl","isValid","validate","invalidate","onFocus","onBlur","map","keyClass","element","errors","round","isNaN","isFinite","getErrors","speed","toFixed","getSpeed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0960a29.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst keysContext = createContext({\n  validKeys: [],\n  setValidKeys: [],\n});\n\nexport const keysProvider = keysContext.Provider;\nexport const keysConsumer = keysContext.Consumer;\n\nexport default keysContext;\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport keysContext from '../context/keys';\n\nconst Key = ({ content = 'a', keyName = content, type = '' }) => {\n  const { validKeys, setValidKeys } = useContext(keysContext);\n\n  const [pressed, setPressed] = useState(false);\n\n  const handleClick = (event) => {\n    setPressed(true);\n    setTimeout(() => setPressed(false), 200);\n\n    if (validKeys.includes(content.toLowerCase())) setValidKeys((curr) => curr.filter((key) => key !== content.toLowerCase()));\n    else setValidKeys((curr) => [...curr, content.toLowerCase()]);\n  };\n\n  const handleKeyDown = (event) => {\n    if (event.key === 'Alt') return;\n\n    setPressed((curr) => (event.key.toLowerCase() === keyName.toLowerCase() ? true : curr));\n  };\n\n  const handleKeyUp = (event) => {\n    setPressed((curr) => (event.key.toLowerCase() === keyName.toLowerCase() ? false : curr));\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, []);\n\n  return (\n    <div className={`key ${type} ${pressed ? 'down' : 'up'} ${!validKeys.includes(content.toLowerCase()) ? 'disabled' : ''}`} onClick={handleClick}>\n      <span className='content'>{content.charAt(0).toUpperCase() + content.slice(1)}</span>\n    </div>\n  );\n};\n\nexport default Key;\n","import React from 'react';\n\nimport Key from './Key';\n\nimport './Keyboard.css';\n\nconst Keyboard = () => {\n  return (\n    <div className='keyboard'>\n      <div className='row'>\n        <Key content='1' />\n        <Key content='2' />\n        <Key content='3' />\n        <Key content='4' />\n        <Key content='5' />\n        <Key content='6' />\n        <Key content='7' />\n        <Key content='8' />\n        <Key content='9' />\n        <Key content='0' />\n        <Key content=')' />\n        <Key content='=' />\n        <Key content='Del' type='del' keyName='Backspace' />\n      </div>\n\n      <div className='row'>\n        <Key content='Tab' type='tab' />\n        <Key content='a' />\n        <Key content='z' />\n        <Key content='e' />\n        <Key content='r' />\n        <Key content='t' />\n        <Key content='y' />\n        <Key content='u' />\n        <Key content='i' />\n        <Key content='o' />\n        <Key content='p' />\n        <Key content='^' />\n        <Key content='$' />\n        <Key content='*' />\n      </div>\n\n      <div className='row'>\n        <Key content='Caps Lock' type='caps-lock' />\n        <Key content='q' />\n        <Key content='s' />\n        <Key content='d' />\n        <Key content='f' />\n        <Key content='g' />\n        <Key content='h' />\n        <Key content='j' />\n        <Key content='k' />\n        <Key content='l' />\n        <Key content='m' />\n        <Key content='Ã¹' />\n        <Key content='Enter' type='enter' />\n      </div>\n\n      <div className='row'>\n        <Key content='Shift' type='l-shift' />\n        <Key content='<' />\n        <Key content='w' />\n        <Key content='x' />\n        <Key content='c' />\n        <Key content='v' />\n        <Key content='b' />\n        <Key content='n' />\n        <Key content=',' />\n        <Key content=';' />\n        <Key content=':' />\n        <Key content='!' />\n        <Key content='Shift' type='r-shift' />\n      </div>\n\n      <div className='row'>\n        <Key content='Ctrl' type='ctrl' keyName='Control' />\n        <Key content='Alt' type='alt' keyName='Alt' />\n        <Key content='-' type='space' keyName=' ' />\n        <Key content='Alt Gr' type='alt-gr' keyName='Alt Gr' />\n        <Key content='Ctrl' type='ctrl' keyName='Control' />\n      </div>\n    </div>\n  );\n};\n\nexport default Keyboard;\n","import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nimport Keyboard from './components/Keyboard';\n\nimport keysContext from './context/keys';\n\nimport { v4 as uuid } from 'uuid';\n\nimport { getRandomInt } from './utils';\n\nconst ROW_SIZE = 4;\nconst GROUP_AMOUNT = 4;\n\nclass Key {\n  constructor(key, visual = key) {\n    this._visual = visual;\n    this._key = key;\n\n    this._done = null;\n\n    this._id = uuid();\n  }\n\n  validate() {\n    this._done = true;\n  }\n\n  invalidate() {\n    this._done = false;\n  }\n\n  get element() {\n    let className = 'key';\n\n    if (this.done === true) className += ' valid';\n    if (this.done === false) className += ' invalid';\n\n    return (\n      <span className={className} key={this.id}>\n        {this.visual}\n      </span>\n    );\n  }\n\n  get key() {\n    return this._key;\n  }\n\n  get visual() {\n    return this._visual;\n  }\n\n  get done() {\n    return this._done;\n  }\n\n  get id() {\n    return this._id;\n  }\n}\n\nclass Space extends Key {\n  constructor() {\n    super(' ', '_');\n  }\n}\n\nconst App = () => {\n  const [totalMs, setTotalMs] = useState(0);\n  const [tempMs, setTempMs] = useState(0);\n\n  const [validKeys, setValidKeys] = useState(['q', 's', 'd', 'f', 'j', 'k', 'l', 'm']);\n  const [focused, setFocused] = useState(false);\n\n  const [doneKeys, setDoneKeys] = useState([]);\n  const [expectedKeys, setExpectedKeys] = useState([]);\n  const [totalKeys, setTotalKeys] = useState(0);\n  const [failedKeys, setFailedKeys] = useState(0);\n\n  useEffect(() => {\n    generateSequence();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    generateSequence();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [validKeys]);\n\n  const generateSequence = () => {\n    setDoneKeys([]);\n    setExpectedKeys([]);\n\n    let group = [];\n\n    for (let i = 0; i < GROUP_AMOUNT; i++) {\n      for (let i = 0; i < ROW_SIZE; i++)\n        group.push(validKeys.length === 1 ? new Key(validKeys[0]) : new Key(validKeys[getRandomInt(validKeys.length - 1)]));\n\n      if (i !== GROUP_AMOUNT - 1) group.push(new Space());\n    }\n\n    setExpectedKeys(group);\n  };\n\n  const handleInputChange = (event) => {\n    event.preventDefault();\n\n    const LETTER_AMOUNT = GROUP_AMOUNT * ROW_SIZE + GROUP_AMOUNT - 1;\n\n    if (expectedKeys.length === LETTER_AMOUNT) {\n      setTempMs(Date.now());\n    }\n\n    if (expectedKeys.length === 1) {\n      setTotalMs((curr) => curr + Date.now() - tempMs);\n      setTotalKeys((curr) => curr + LETTER_AMOUNT);\n    }\n\n    const firstExpectedEl = expectedKeys[0];\n    const isValid = firstExpectedEl.key === event.key;\n\n    if (isValid) firstExpectedEl.validate();\n    else firstExpectedEl.invalidate();\n\n    setDoneKeys((curr) => [...curr, firstExpectedEl]);\n    setExpectedKeys((curr) => curr.slice(1));\n\n    !isValid && setFailedKeys((curr) => curr + 1);\n\n    if (expectedKeys.length === 1) generateSequence();\n  };\n\n  const getErrors = () => {\n    const errors = Math.round((failedKeys / totalKeys) * 100);\n    return isNaN(errors) || !isFinite(errors) ? 0 : errors;\n  };\n\n  const getSpeed = () => {\n    const speed = totalKeys / (totalMs / 60000) / 5;\n    return isNaN(speed) || !isFinite(speed) ? 0 : speed.toFixed(0);\n  };\n\n  const focus = () => {\n    setFocused(true);\n  };\n\n  const blur = () => {\n    setFocused(false);\n  };\n\n  return (\n    <keysContext.Provider value={{ validKeys, setValidKeys }}>\n      <div className='container'>\n        <div>\n          <div className={`text-progression ${focused ? 'active' : ''}`}>\n            <input type='text' className='text-input' onKeyPress={handleInputChange} onFocus={focus} onBlur={blur} />\n\n            <p>\n              {doneKeys.map((keyClass) => keyClass.element)}\n              {expectedKeys.map((keyClass) => keyClass.element)}\n            </p>\n\n            <p>\n              <span>{getErrors()}%</span> &#160;\n              <span>{getSpeed()}wpm</span>\n            </p>\n          </div>\n\n          <Keyboard />\n        </div>\n      </div>\n    </keysContext.Provider>\n  );\n};\n\nexport default App;\n","export const getRandomInt = (max) => {\n  return Math.floor(Math.random() * Math.floor(max + 1)); // 0 and max included\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}